trigger:
  - main  

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'my-connection'  
  resourceGroupName: 'my-rg'
  aksClusterName: 'my-aks'
  acrName: 'myacr'
  imageName: 'tomcat'
  imageTag: 'v1'

stages:
- stage: DeployToAKS
  displayName: 'Deploy Application to AKS'
  jobs:
  - job: Deploy
    displayName: 'Deploy to AKS'
    steps:
    
    - script: |
        sudo apt-get update
        sudo apt-get install -y terraform kubectl
      displayName: 'Install missing dependencies'
    
    - task: AzureCLI@2
      displayName: 'Login to Azure and Get AKS Credentials'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName) --overwrite-existing
          kubectl config current-context
          kubectl get nodes

    - script: |
        kubectl config view
        kubectl cluster-info
      displayName: 'Check AKS Connection'

    - script: |
        kubectl apply -f k8s/deployment.yaml
      displayName: 'Deploy Application to AKS'

    - script: |
        kubectl get pods
        kubectl get service tomcat-service
      displayName: 'Check Deployment Status'
